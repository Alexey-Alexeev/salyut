#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–µ–ø–ª–æ—è
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */

const requiredEnvVars = [
  'NEXT_PUBLIC_SUPABASE_URL',
  'NEXT_PUBLIC_SUPABASE_ANON_KEY',
  'SUPABASE_SERVICE_ROLE_KEY',
  'DATABASE_URL',
  'NEXT_PUBLIC_YANDEX_API_KEY'
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–ø–∞—Å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const dangerousVars = [
  'NEXT_PUBLIC_TELEGRAM_BOT_TOKEN',
  'NEXT_PUBLIC_TELEGRAM_CHAT_ID'
];

const requiredSecrets = [
  'FTP_SERVER',
  'FTP_USERNAME',
  'FTP_PASSWORD',
  'FTP_SERVER_DIR'
];

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–µ–ø–ª–æ—è...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
let envVarsOk = true;

requiredEnvVars.forEach(varName => {
  const value = process.env[varName];
  if (value) {
    console.log(`  ‚úÖ ${varName}: ${value.substring(0, 20)}...`);
  } else {
    console.log(`  ‚ùå ${varName}: –ù–ï –ù–ê–ô–î–ï–ù–ê`);
    envVarsOk = false;
  }
});

console.log('\nüîê GitHub Secrets (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è):');
requiredSecrets.forEach(secretName => {
  console.log(`  üìù ${secretName}: [–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ GitHub Secrets]`);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–ø–∞—Å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
console.log('\nüö® –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
let hasDangerousVars = false;

dangerousVars.forEach(varName => {
  const value = process.env[varName];
  if (value) {
    console.log(`  ‚ùå ${varName}: –û–ü–ê–°–ù–û! –≠—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ–ø–∞–¥–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä!`);
    hasDangerousVars = true;
  } else {
    console.log(`  ‚úÖ ${varName}: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (—Ö–æ—Ä–æ—à–æ)`);
  }
});

if (hasDangerousVars) {
  console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω—ã –æ–ø–∞—Å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ!');
  console.log('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ TELEGRAM_BOT_TOKEN –≤–º–µ—Å—Ç–æ NEXT_PUBLIC_TELEGRAM_BOT_TOKEN');
  console.log('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ TELEGRAM_CHAT_ID –≤–º–µ—Å—Ç–æ NEXT_PUBLIC_TELEGRAM_CHAT_ID');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
console.log('\nüìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:');
const fs = require('fs');
const path = require('path');

const requiredFiles = [
  'package.json',
  'next.config.js',
  'app/layout.tsx',
  'app/page.tsx',
  '.github/workflows/deploy.yml'
];

requiredFiles.forEach(file => {
  const filePath = path.join(__dirname, '..', file);
  if (fs.existsSync(filePath)) {
    console.log(`  ‚úÖ ${file}`);
  } else {
    console.log(`  ‚ùå ${file}: –ù–ï –ù–ê–ô–î–ï–ù`);
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json:');
try {
  const packageJson = JSON.parse(fs.readFileSync(path.join(__dirname, '..', 'package.json'), 'utf8'));
  
  if (packageJson.scripts && packageJson.scripts.build) {
    console.log('  ‚úÖ build script –Ω–∞–π–¥–µ–Ω');
  } else {
    console.log('  ‚ùå build script –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  if (packageJson.dependencies && packageJson.dependencies.next) {
    console.log(`  ‚úÖ Next.js –≤–µ—Ä—Å–∏—è: ${packageJson.dependencies.next}`);
  } else {
    console.log('  ‚ùå Next.js –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö');
  }
} catch (error) {
  console.log('  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json:', error.message);
}

// –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:');

if (envVarsOk) {
  console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é');
  console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Secrets');
  console.log('  2. –°–¥–µ–ª–∞–π—Ç–µ push –≤ master –≤–µ—Ç–∫—É');
  console.log('  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ GitHub Actions');
  console.log('  4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω');
} else {
  console.log('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  console.log('\nüîß –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:');
  console.log('  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  console.log('  2. –°–æ–∑–¥–∞–π—Ç–µ .env.local —Ñ–∞–π–ª');
  console.log('  3. –î–æ–±–∞–≤—å—Ç–µ GitHub Secrets');
  console.log('  4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É');
}

console.log('\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:');
console.log('  - CI_CD_SETUP.md - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ CI/CD');
console.log('  - ENV_VARIABLES_SETUP.md - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö');
console.log('  - DOMAIN_CHANGE_INSTRUCTIONS.md - —Å–º–µ–Ω–∞ –¥–æ–º–µ–Ω–∞');

console.log('\n‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n');
