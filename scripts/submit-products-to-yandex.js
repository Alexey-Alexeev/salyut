/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ø–Ω–¥–µ–∫—Å —á–µ—Ä–µ–∑ IndexNow
 * –ó–∞–ø—É—Å–∫: node scripts/submit-products-to-yandex.js
 */

const { submitProductUrl, submitMultipleUrls } = require('../lib/indexnow.ts');
const { db } = require('../lib/db.ts');
const { products } = require('../db/schema/index.ts');

async function submitAllProducts() {
  console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ø–Ω–¥–µ–∫—Å —á–µ—Ä–µ–∑ IndexNow...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    const allProducts = await db.select({
      slug: products.slug,
      name: products.name
    }).from(products).where(eq(products.is_active, true));

    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${allProducts.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤`);

    if (allProducts.length === 0) {
      console.log('‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    const productUrls = allProducts.map(product => 
      `https://salutgrad.ru/product/${product.slug}`
    );

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –Ø–Ω–¥–µ–∫—Å...');
    const result = await submitMultipleUrls(productUrls);

    if (result.success) {
      console.log('‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –Ø–Ω–¥–µ–∫—Å!');
      console.log(`üìä –°—Ç–∞—Ç—É—Å: ${result.status}`);
      console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${result.message}`);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:');
      console.log(`üìä –°—Ç–∞—Ç—É—Å: ${result.status}`);
      console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${result.message}`);
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    console.log('\nüìã –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:');
    allProducts.forEach((product, index) => {
      console.log(`${index + 1}. ${product.name} (${product.slug})`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
submitAllProducts();
