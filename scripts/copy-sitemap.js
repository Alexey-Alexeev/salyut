/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ public –≤ out –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏
 * 
 * –ö–æ–ø–∏—Ä—É–µ—Ç:
 * 1. sitemap.xml - –¥–µ—Ç–∞–ª—å–Ω—ã–π sitemap —Å video –∏ image —Ä–∞–∑–º–µ—Ç–∫–æ–π
 *    (–≤–º–µ—Å—Ç–æ –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –æ—Ç Next.js)
 * 2. .htaccess - –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è Apache (—Ä–µ–≥.—Ä—É —Ö–æ—Å—Ç–∏–Ω–≥)
 */

const fs = require('fs');
const path = require('path');

const filesToCopy = [
  {
    name: 'sitemap.xml',
    source: path.join(__dirname, '..', 'public', 'sitemap.xml'),
    dest: path.join(__dirname, '..', 'out', 'sitemap.xml'),
    required: true
  },
  {
    name: '.htaccess',
    source: path.join(__dirname, '..', 'public', '.htaccess'),
    dest: path.join(__dirname, '..', 'out', '.htaccess'),
    required: true
  },
  {
    name: 'yandex_085493d34d34fe0b.html',
    source: path.join(__dirname, '..', 'public', 'yandex_085493d34d34fe0b.html'),
    dest: path.join(__dirname, '..', 'out', 'yandex_085493d34d34fe0b.html'),
    required: true
  }
];

console.log('üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏...\n');

let hasErrors = false;

filesToCopy.forEach(file => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if (!fs.existsSync(file.source)) {
      if (file.required) {
        console.error(`‚ùå –§–∞–π–ª ${file.name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ public/`);
        hasErrors = true;
      } else {
        console.log(`‚ö†Ô∏è  –§–∞–π–ª ${file.name} –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)`);
      }
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ out
    const outDir = path.dirname(file.dest);
    if (!fs.existsSync(outDir)) {
      console.error('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è out/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      hasErrors = true;
      return;
    }

    // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
    fs.copyFileSync(file.source, file.dest);
    const stats = fs.statSync(file.dest);
    const size = stats.size > 1024 
      ? `${(stats.size / 1024).toFixed(2)} KB`
      : `${stats.size} bytes`;
    
    console.log(`‚úÖ ${file.name} ‚Üí out/ (${size})`);
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ ${file.name}:`, error.message);
    hasErrors = true;
  }
});

if (hasErrors) {
  console.log('\n‚ùå –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏');
  process.exit(1);
} else {
  console.log('\n‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã');
}

