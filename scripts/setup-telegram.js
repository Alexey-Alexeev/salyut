// scripts/setup-telegram.js
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Telegram –±–æ—Ç–∞
 * –ó–∞–ø—É—Å–∫: node scripts/setup-telegram.js
 */

require('dotenv').config({ path: '.env.local' })

async function setupTelegram() {
  console.log('ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞...\n')
  
  const botToken = process.env.TELEGRAM_BOT_TOKEN
  const chatId = process.env.TELEGRAM_CHAT_ID
  
  console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:')
  console.log('TELEGRAM_BOT_TOKEN:', botToken ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω')
  console.log('TELEGRAM_CHAT_ID:', chatId ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω')
  
  if (!botToken) {
    console.error('\n‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!')
    console.log('\nüí° –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞:')
    console.log('1. –ù–∞–ø–∏—à–∏—Ç–µ @BotFather –≤ Telegram')
    console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot')
    console.log('3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º')
    console.log('4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ .env.local:')
    console.log('   TELEGRAM_BOT_TOKEN=your_bot_token_here')
    return
  }
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞...')
    const botInfo = await fetch(`https://api.telegram.org/bot${botToken}/getMe`)
    const botData = await botInfo.json()
    
    if (!botData.ok) {
      console.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!')
      console.log('–û—à–∏–±–∫–∞:', botData.description)
      return
    }
    
    console.log('‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω:', botData.result.username)
    console.log('üìù –ò–º—è –±–æ—Ç–∞:', botData.result.first_name)
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ chat_id)
    console.log('\nüîç –ü–æ–∏—Å–∫ chat_id...')
    const updates = await fetch(`https://api.telegram.org/bot${botToken}/getUpdates`)
    const updatesData = await updates.json()
    
    if (updatesData.ok && updatesData.result.length > 0) {
      console.log('\nüì® –ù–∞–π–¥–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:')
      updatesData.result.forEach((update, index) => {
        if (update.message) {
          console.log(`${index + 1}. Chat ID: ${update.message.chat.id}`)
          console.log(`   –û—Ç: ${update.message.from.first_name}`)
          console.log(`   –¢–µ–∫—Å—Ç: "${update.message.text}"`)
          console.log('')
        }
      })
      
      if (!chatId) {
        console.log('üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–π Chat ID –≤ .env.local:')
        console.log('   TELEGRAM_CHAT_ID=your_chat_id_here')
      }
    } else {
      console.log('üì≠ –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
      console.log('\nüí° –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è chat_id:')
      console.log(`1. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞: @${botData.result.username}`)
      console.log('2. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, /start)')
      console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞')
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ chat_id –µ—Å—Ç—å
    if (chatId) {
      console.log('\nüì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è...')
      
      const testMessage = `üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç FireWorks!\n\n‚è∞ ${new Date().toLocaleString('ru-RU')}`
      
      const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: testMessage,
        }),
      })
      
      const result = await response.json()
      
      if (result.ok) {
        console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
        console.log('üéâ Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:')
        console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', result.error_code)
        console.error('–û–ø–∏—Å–∞–Ω–∏–µ:', result.description)
        
        if (result.error_code === 400) {
          console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏ 400:')
          console.log('- –ù–µ–≤–µ—Ä–Ω—ã–π chat_id')
          console.log('- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º')
          console.log('- –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º')
        }
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Telegram API:', error.message)
  }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ webhook (–µ—Å–ª–∏ –±—ã–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
async function clearWebhook() {
  const botToken = process.env.TELEGRAM_BOT_TOKEN
  if (!botToken) return
  
  console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ webhook...')
  try {
    const response = await fetch(`https://api.telegram.org/bot${botToken}/deleteWebhook`)
    const result = await response.json()
    
    if (result.ok) {
      console.log('‚úÖ Webhook –æ—á–∏—â–µ–Ω')
    }
  } catch (error) {
    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å webhook:', error.message)
  }
}

async function main() {
  await setupTelegram()
  await clearWebhook()
}

main().catch(console.error)